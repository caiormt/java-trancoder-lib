name: Java CI with Maven

on:
  push:
    branches:
      - main
      - develop
    paths-ignore:
      - "**/README.md"
      - "**/CONTRIBUTING.md"
      - "**/CONTRIBUTORS.txt"
      - '**/CODE_OF_CONDUCT.md'
      - "**/LICENSE"
      - "**/CODEOWNERS"
  pull_request:
    branches:
      - main
      - develop
    paths-ignore:
      - "**/README.md"
      - "**/CONTRIBUTING.md"
      - "**/CONTRIBUTORS.txt"
      - '**/CODE_OF_CONDUCT.md'
      - "**/LICENSE"
      - "**/CODEOWNERS"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 8, 11, 17, 21 ]
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: ${{ matrix.java-version }}
          distribution: "corretto"
          cache: "maven"
          check-latest: true

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Compile with Maven
        run: mvn -T 1C clean generate-sources compile --file pom.xml

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java-version: [ 8, 11, 17, 21 ]
    needs:
        - build
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: ${{ matrix.java-version }}
          distribution: "corretto"
          cache: "maven"
          check-latest: true

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Test with Maven
        run: mvn -T 1C test-compile test --file pom.xml

  sonarcloud:
    environment: sonarcloud
    runs-on: ubuntu-latest
    needs:
        - test
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: "corretto"
          cache: "maven"

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-sonar-${{ hashFiles('**/pom.xml') }}

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Build and analyze
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=caiormt_java-trancoder-lib -Dsonar.organization=caiormt -Dsonar.host.url=https://sonarcloud.io -Dssonar.token=$SONAR_TOKEN
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
